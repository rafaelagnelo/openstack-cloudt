{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Computa\u00e7\u00e3o em Nuvem","text":"Edi\u00e7\u00e3o <p>2025.1</p>"},{"location":"#kit-t","title":"KIT-T","text":"<p>Pedro Henrique Vidal</p> <p>Rafael Agnelo</p>"},{"location":"#entregas","title":"Entregas","text":"<ul> <li> Roteiro 1 </li> <li> Roteiro 2</li> <li> Roteiro 3</li> <li> Roteiro 4</li> <li> Projeto</li> </ul>"},{"location":"#referencias","title":"Refer\u00eancias","text":"<p>Material for MkDocs</p>"},{"location":"roteiro1/main/","title":"Roteiro 1","text":""},{"location":"roteiro1/main/#objetivo","title":"Objetivo","text":"<p>O presente relat\u00f3rio tem como alvo abstrair os seguintes conhecimentos:</p> <p>\u2022   Entendimento de conceitos b\u00e1sicos sobre gerenciamento de hardware (Bare Metal) e MaaS (Metal as a Service).</p> <p>\u2022   Entendimento de conceitos b\u00e1sicos sobre redes de computadores.</p>"},{"location":"roteiro1/main/#infraestrutura","title":"Infraestrutura","text":"<p>Instala\u00e7\u00e3o do Ubuntu:</p> sudo snap install maas --channel=3.5/Stable <p></p> <p>Dashboard do MAAS</p> <p>Conforme ilustrado acima, a tela inicial do MAAS apresenta um dashboard com informa\u00e7\u00f5es sobre o estado atual dos servidores gerenciados. O dashboard \u00e9 composto por diversos pain\u00e9is, cada um exibindo informa\u00e7\u00f5es sobre um aspecto espec\u00edfico do ambiente gerenciado. Os pain\u00e9is podem ser configurados e personalizados de acordo com as necessidades do usu\u00e1rio.</p> <p></p>"},{"location":"roteiro1/main/#app","title":"App","text":""},{"location":"roteiro1/main/#tarefa-1","title":"Tarefa 1","text":"<pre><code>architecture-beta\n    group api(cloud)[API]\n\n    service db(database)[Database] in api\n    service disk1(disk)[Storage] in api\n    service disk2(disk)[Storage] in api\n    service server(server)[Server] in api\n\n    db:L -- R:server\n    disk1:T -- B:server\n    disk2:T -- B:db</code></pre> <p>Mermaid</p>"},{"location":"roteiro1/main/#tarefa-2","title":"Tarefa 2","text":"<p>Dashboard do Maas: </p> <p>Aba com imagens sincronizadas:</p> <p></p> <p>Aba da m\u00e1quina 5 mostrando os testes de hardware e commissioning com Status \"OK\"</p> <p></p>"},{"location":"roteiro1/main/#tarefa-3","title":"Tarefa 3","text":"<p>1 - Print da tela do Dashboard do MAAS com as 2 Maquinas e seus respectivos IPs:</p> <p></p> <p>2 -  Print da aplicacao Django, provando que voce est\u00e1 conectado ao server:</p> <p></p> <p>3 - Configura\u00e7\u00e3o com deploy:</p> <p></p>"},{"location":"roteiro1/main/#tarefa-4","title":"Tarefa 4","text":"<ol> <li>De um print da tela do Dashboard do MAAS com as 3 Maquinas e seus respectivos IPs.</li> </ol> <ol> <li>Aplicacao Django, provando que voce est\u00e1 conectado ao server2 </li> </ol> <ol> <li>Explique qual diferenca entre instalar manualmente a aplicacao Django e utilizando o Ansible.</li> </ol>"},{"location":"roteiro1/main/#acerca-do-funcionamento-do-proxy","title":"Acerca do funcionamento do proxy:","text":""},{"location":"roteiro1/main/#questionario-projeto-ou-plano","title":"Question\u00e1rio, Projeto ou Plano","text":"<p>Esse se\u00e7\u00e3o deve ser preenchida apenas se houver demanda do roteiro.</p>"},{"location":"roteiro1/main/#discussoes","title":"Discuss\u00f5es","text":"<p>Quais as dificuldades encontradas? O que foi mais f\u00e1cil? O que foi mais dif\u00edcil?</p>"},{"location":"roteiro1/main/#conclusao","title":"Conclus\u00e3o","text":"<p>O que foi poss\u00edvel concluir com a realiza\u00e7\u00e3o do roteiro?</p>"},{"location":"roteiro2/main/","title":"Roteiro 2 - Juju","text":""},{"location":"roteiro2/main/#1-objetivo","title":"1. Objetivo","text":"<p>Tendo compreendido o relat\u00f3rio 1, o presente relat\u00f3rio tem como alvo os seguintes objetivos com Deployment Orchestration:</p> <p>\u2022   Automatizar a infraestrutura, reduzindo a complexidade e garantindo consist\u00eancia nas implanta\u00e7\u00f5es.</p> <p>\u2022   Gerenciamento centralizado, permitindo administra\u00e7\u00e3o eficiente de m\u00faltiplos servidores.</p> <p>\u2022   Integra\u00e7\u00e3o com provedores, usando recursos f\u00edsicos de forma otimizada.</p>"},{"location":"roteiro2/main/#2-infraestrutura","title":"2. Infraestrutura","text":""},{"location":"roteiro2/main/#21-por-que-utilizar-o-juju-para-deployment-orchestration","title":"2.1 Por que utilizar o Juju para Deployment Orchestration?","text":"<p>O Juju \u00e9 uma ferramenta de orquestra\u00e7\u00e3o que atua desde o provisionamento at\u00e9 a configura\u00e7\u00e3o e integra\u00e7\u00e3o de servi\u00e7os. Ao contr\u00e1rio do Ansible, que se limita \u00e0 configura\u00e7\u00e3o de m\u00e1quinas j\u00e1 provisionadas, o Juju se integra diretamente com o MAAS (Metal as a Service), permitindo orquestrar o ambiente Bare Metal de forma completa e automatizada.</p>"},{"location":"roteiro2/main/#22-instalacao-do-juju","title":"2.2 Instala\u00e7\u00e3o do Juju","text":"<p>Inicialmente, foi necess\u00e1rio acessar o dashboard do MAAS e garantir que todas as m\u00e1quinas nomeadas como server1, server2, server3, server4 e server5 estivessem com status Ready. Realizamos o release das m\u00e1quinas que haviam sido anteriormente utilizadas para as aplica\u00e7\u00f5es Django e PostgreSQL, a fim de garantir que estivessem dispon\u00edveis para novas aloca\u00e7\u00f5es.</p> <p>Tendo as m\u00e1quinas prontas,  acessamos o n\u00f3 principal (main) via SSH para a instala\u00e7\u00e3o do Juju. A instala\u00e7\u00e3o foi realizada utilizando o Snap com o canal da vers\u00e3o 3.6:</p> <pre><code>$ sudo snap install juju --channel 3.6\n</code></pre>"},{"location":"roteiro2/main/#23-configuracao-da-cloud-maas-no-juju","title":"2.3 Configura\u00e7\u00e3o da Cloud MAAS no Juju","text":"<p>Ap\u00f3s a instala\u00e7\u00e3o do Juju, foi necess\u00e1rio garantir que o MAAS estivesse vis\u00edvel como provedor de cloud. Para isso, executamos o comando:</p> <pre><code>$ juju clouds\n</code></pre> <p>\u00c9 importante notar que:</p> <p>Como o MAAS n\u00e3o apareceu na listagem, adicionamos manualmente uma nova cloud por meio de um arquivo de configura\u00e7\u00e3o chamado maas-cloud.yaml, com o seguinte conte\u00fado:</p> <pre><code>clouds:\n  maas-one:\n    type: maas\n    auth-types: [oauth1]\n    endpoint: http://192.168.0.3:5240/MAAS/\n</code></pre> <p>Em seguida, adicionamos a cloud com o comando:</p> <pre><code>$ juju add-cloud --client -f maas-cloud.yaml maas-one\n</code></pre>"},{"location":"roteiro2/main/#24-adicao-de-credenciais-ao-juju","title":"2.4 Adi\u00e7\u00e3o de credenciais ao Juju","text":"<p>Para permitir que o Juju se autenticasse e interagisse com o MAAS, criamos o arquivo maas-creds.yaml, contendo as credenciais de autentica\u00e7\u00e3o:</p> <pre><code>credentials:\n  maas-one:\n    anyuser:\n      auth-type: oauth1\n      maas-oauth: &lt;API KEY&gt;\n</code></pre> <p>O valor  foi substitu\u00eddo pela chave gerada no MAAS, dispon\u00edvel no menu do usu\u00e1rio. <p>As credenciais foram adicionadas com o comando:</p> <pre><code>$ juju add-credential --client -f maas-creds.yaml maas-one\n</code></pre>"},{"location":"roteiro2/main/#25-bootstrap-do-controller-do-juju","title":"2.5 Bootstrap do controller do Juju","text":"<p>Para iniciar o uso do Juju, foi necess\u00e1rio criar um controller, respons\u00e1vel por gerenciar os deploys futuros. Antes do bootstrap, acessamos o dashboard do MAAS e aplicamos a tag juju \u00e0 m\u00e1quina server1.</p> <p>O comando utilizado para o bootstrap foi:</p> <pre><code>$ juju bootstrap --bootstrap-series=jammy --constraints tags=juju maas-one maas-controller\n</code></pre> <p>Esse processo levou alguns minutos, pois envolveu o provisionamento da m\u00e1quina e a instala\u00e7\u00e3o do agente de controle do Juju. Ao final, validamos o sucesso da opera\u00e7\u00e3o com:</p> <pre><code>$ juju status\n</code></pre> <p>O controller foi iniciado com sucesso e passou a ser a interface principal entre os comandos do juju-cli e a infraestrutura gerenciada via MAAS.</p>"},{"location":"roteiro2/main/#3-aplicacao","title":"3. Aplica\u00e7\u00e3o","text":""},{"location":"roteiro2/main/#31-configuracao-do-modelo-para-deploy-das-aplicacoes","title":"3.1 Configura\u00e7\u00e3o do modelo para deploy das aplica\u00e7\u00f5es","text":"<p>Com o controller j\u00e1 inicializado, realizamos a instala\u00e7\u00e3o do Dashboard do Juju - o que permitiu a visualiza\u00e7\u00e3o gr\u00e1fica dos modelos, aplica\u00e7\u00f5es e unidades gerenciadas;</p> <p>Ap\u00f3s esse acesso, retornamos ao terminal e listamos os modelos dispon\u00edveis com:</p> <pre><code>$ juju models\n</code></pre> <p>Em seguida, foi feito o switch para o modelo padr\u00e3o do controller com o comando:</p> <pre><code>$ juju switch maas-controller:admin/maas\n</code></pre> <p>Dessa forma, garantimos que Grafana e Prometheus fossem implantados no modelo correto.</p>"},{"location":"roteiro2/main/#32-preparacao-dos-charms-locais","title":"3.2 Prepara\u00e7\u00e3o dos charms locais","text":"<p>Para realizar o deploy local das aplica\u00e7\u00f5es, foi criada uma pasta dedicada para armazenar os charms baixados do Charmhub:</p> <p><pre><code>$ mkdir -p /home/cloud/charms\n$ cd /home/cloud/charms\n</code></pre> Em seguida, baixamos:</p> <pre><code>$ juju download grafana\n$ juju download prometheus2\n</code></pre>"},{"location":"roteiro2/main/#33-deploy-dos-servicos","title":"3.3 Deploy dos servi\u00e7os","text":"<p>Com a utiliza\u00e7\u00e3o do charm local, fizemos:</p> <p><pre><code>$ juju deploy ./prometheus2_XXX.charm\n$ juju deploy ./grafana_XXX.charm\n</code></pre> Note que:</p> <p>Enquanto ocorria o deploy, observamos analisando o status do Juju.</p>"},{"location":"roteiro2/main/#34-integracao-validacao-e-visualizacao-dos-servicos","title":"3.4 Integra\u00e7\u00e3o, valida\u00e7\u00e3o e visualiza\u00e7\u00e3o dos servi\u00e7os","text":"<p>Com os servi\u00e7os Grafana e Prometheus em estado active, realizamos a integra\u00e7\u00e3o entre eles utilizando os procedimentos descritos no README do charm do Grafana. A integra\u00e7\u00e3o foi feita por meio da interface gr\u00e1fica do Grafana, acessando o painel, criando um novo dashboard e configurando o Prometheus como fonte de dados (source).</p> <p>Na sequ\u00eancia, validamos o funcionamento da aplica\u00e7\u00e3o acessando o dashboard do Grafana a partir da rede do Insper. A conex\u00e3o foi estabelecida com sucesso, comprovando a disponibilidade da aplica\u00e7\u00e3o fora do ambiente local.</p> <p>Por fim, acessamos a interface gr\u00e1fica do Juju, visualisando as aplica\u00e7\u00f5es implantadas e em execu\u00e7\u00e3o dentro do modelo ativo.</p>"},{"location":"roteiro2/main/#tarefa","title":"Tarefa","text":""}]}